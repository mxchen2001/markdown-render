{"version":3,"sources":["component/MarkdownWrapper.js","component/SlideModal.js","component/HelpModal.js","component/Switch.js","App.js","index.js"],"names":["Pagebreak","props","Grid","container","spacing","direction","alignItems","justify","style","paddingTop","paddingBottom","Chip","MarkdownWrapperHelper","value","indices","remarkPlugins","rehypePlugins","elements","i","length","push","className","substring","label","MarkdownWrapper","useStyles","makeStyles","theme","modal","backgroundColor","palette","background","paper","overflow","width","height","margin","padding","modalFull","slideNav","textAlign","color","text","secondary","justifyContent","formControl","minWidth","SlideModal","classes","React","useState","open","setOpen","pageNum","setPageNum","full","setFull","element","handleFull","IconButton","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","onKeyDown","event","key","Fade","in","clsx","Container","Typography","variant","id","disabled","IOSSwitch","withStyles","root","switchBase","transform","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","drawerWidth","localValue","localStorage","getItem","localSettings","localSettingsObj","JSON","parse","initialValue","App","onControlsChange","bind","onSourceChange","toggleTheme","onDownload","newRemarkPlugins","remarkSlug","remarkToc","newRehypePlugins","rehypeHighlight","temp_gfm","temp_raw","temp_math","concat","remarkGfm","rehypeRaw","remarkMath","rehypeKatex","state","gfm","raw","math","dark","console","log","toggledState","this","setState","setItem","stringify","newIndices","n","startIndex","indexOf","evt","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","new_val","parseValue","name","target","pluginHelper","CssBaseline","AppBar","position","appBar","appBarShift","Toolbar","noWrap","title","FormControlLabel","control","Checkbox","onChange","aria-label","edge","hide","content","contentShift","drawerHeader","defaultLanguage","defaultValue","onMount","Drawer","drawer","drawerFull","anchor","drawerPaper","drawerPaperFull","PureComponent","display","easing","sharp","duration","leavingScreen","parseFloat","easeOut","enteringScreen","marginRight","flexGrow","flexShrink","mixins","toolbar","minHeight","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.1a2e3019.chunk.js","sourcesContent":["import React from 'react'\nimport Markdown from 'react-markdown'\n\nimport {\n    Grid,\n    Chip,\n} from '@material-ui/core/';\n\nfunction Pagebreak(props) {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ paddingTop: \"5%\", paddingBottom: \"5%\" }}\n        >\n            <Chip {...props}/>\n        </Grid>\n    );\n}\n\nfunction MarkdownWrapperHelper(value, indices, remarkPlugins, rehypePlugins) {\n    var elements = [];\n  \n    for(var i = 1; i < indices.length; i++){\n         // push the component to elements!\n        elements.push(              \n          <Markdown\n            style={{ paddingBottom: \"10%\"}}\n            className=\"markdown-body\"\n            remarkPlugins={remarkPlugins}\n            rehypePlugins={rehypePlugins}\n          >\n            {value.substring(indices[i - 1] + 9, indices[i])}\n          </Markdown>\n        );\n  \n        elements.push(\n          <Pagebreak label={\"Slide \" + i}/>\n        );\n    }\n    return elements\n}\n  \n\nfunction MarkdownWrapper(props) {\n    var elements = MarkdownWrapperHelper(props.value, props.indices, props.remarkPlugins, props.rehypePlugins)\n    return (\n        <div > \n          {elements}\n        </div>\n    );\n  }\n\nexport { MarkdownWrapper, MarkdownWrapperHelper}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { \n  Container,\n  IconButton \n} from '@material-ui/core';\n\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { MarkdownWrapperHelper } from './MarkdownWrapper';\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    width: \"80vw\",\n    height: \"90vh\",\n    margin: \"5vh 10vw 5vh 10vw\",\n    padding: \"3em\",\n  },\n  modalFull: {\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    width: \"100vw\",\n    height: \"100vh\",\n    margin: \"0vh 0vw 0vh 0vw\",\n    padding: \"3em\",\n\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  slideNav: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    justifyContent: 'space-between'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nexport default function SlideModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [pageNum, setPageNum] = React.useState(0);\n  const [full, setFull] = React.useState(false);\n\n  const element = MarkdownWrapperHelper(props.value, props.indices, props.remarkPlugins, props.rehypePlugins)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNext = () => {\n    setPageNum(pageNum >= element.length - 2 ? pageNum : pageNum + 2);\n  };\n\n  const handleFull = () => {\n    setFull(!full)\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"ArrowRight\" || event.key === \" \" || event.key === \"ArrowDown\") {\n      setPageNum(pageNum >= element.length - 2 ? pageNum : pageNum + 2);\n    } else if (event.key === \"ArrowLeft\" || event.key === \"ArrowUp\") {\n      setPageNum(pageNum <= 0 ? 0 : pageNum - 2);\n    } else if (event.key === \"Escape\") {\n      setOpen(false);\n    } else if (event.key === \"F\" || event.key === \"f\") {\n      handleFull()\n    }\n  };\n\n  return (\n    <div>\n      <IconButton style={{color: \"#5cb85c\"}} onClick={handleOpen}>\n        <PresentToAllIcon />\n      </IconButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        onKeyDown={handleKeyPress}\n      >\n        <Fade in={open}>\n          <div className={clsx(classes.modal, {[classes.modalFull] : full})}>\n\n            <IconButton onClick={handleFull}>\n              <FullscreenIcon />\n            </IconButton>\n\n            <div onClick={handleNext}>\n              <Container>\n                {element[pageNum]}\n                {element[pageNum + 1]}\n              </Container>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { \n  Typography,\n  IconButton \n} from '@material-ui/core';\n\nimport HelpIcon from '@material-ui/icons/Help';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    width: \"80vw\",\n    height: \"90vh\",\n    margin: \"5vh 10vw 5vh 10vw\",\n    padding: \"3em\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  slideNav: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nexport default function SlideModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton style={{color: \"#757575\"}} onClick={handleOpen}>\n        <HelpIcon />\n      </IconButton>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n      >\n        <Fade in={open}>\n          <div className={classes.modal}>\n            <Typography variant=\"h3\" style={{\"text-align\": \"center\", \"padding-bottom\": \"0.4em\"}}>Help Guide</Typography>\n        \n            {/* Dashboard */}\n            <Typography variant=\"h4\">Editor</Typography>\n            <Typography id=\"text-body\" variant=\"h6\">Standard Markdown format, with a slight twist. Use the keyword <code style={{backgroundColor: '#f4f4f4'}}>@newslide</code> to create a \"pagebreak\" to render the contents on different slides.</Typography>\n            <br/>\n            <br/>\n            <br/>\n            <Typography variant=\"h4\">Preview Window</Typography>\n            <Typography id=\"text-body\" variant=\"h6\">Preview the Markdown with indication of different slides. You can fullscreen the preview window by pressing <IconButton disabled={true}><FullscreenIcon/></IconButton></Typography>\n            <br/>\n            <br/>\n            <br/>\n            <Typography variant=\"h4\">Format Options</Typography>\n            <Typography id=\"text-body\" variant=\"h6\">You can choose to include Github Flavored Markdown, <code style={{backgroundColor: '#f4f4f4'}}>GFM</code>, Raw HTML <code style={{backgroundColor: '#f4f4f4'}}>HTML</code>, and/or to include Latex support <code style={{backgroundColor: '#f4f4f4'}}>LATEX</code>.</Typography>\n            <br/>\n            <br/>\n            <br/>\n            <Typography variant=\"h4\">Presentation Mode</Typography>\n            <Typography id=\"text-body\" variant=\"h6\">To present the Markdown Slides, click on the <IconButton disabled={true}><PresentToAllIcon style={{color: \"#5cb85c\"}}/></IconButton> button to enter presentation mode. You can click the slide and/or use the arrow keys to navigate between the individually rendered slides. Similar to the Preview, you can fullscreen Presentation Mode by clicking <IconButton disabled={true}><FullscreenIcon/></IconButton>.  Fullscreen Presentation Mode can be toggled using \"F\".</Typography>\n            <br/>\n            <br/>\n            <br/>\n            <Typography variant=\"h4\">Download</Typography>\n            <Typography id=\"text-body\" variant=\"h6\">The contents of the preview window can be downloadeded. Click on <IconButton disabled={true}><GetAppIcon style={{color: \"#5bc0de\"}}/></IconButton> to download as <code style={{backgroundColor: '#f4f4f4'}}>markdown-slides.md</code>.</Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n\nexport default IOSSwitch","import React from 'react'\n\nimport remarkGfm from 'remark-gfm'\nimport remarkSlug from 'remark-slug'\nimport remarkToc from 'remark-toc'\nimport rehypeHighlight from 'rehype-highlight'\nimport rehypeRaw from 'rehype-raw'\n\nimport remarkMath from 'remark-math'\nimport rehypeKatex from 'rehype-katex'\nimport 'katex/dist/katex.min.css' // `rehype-katex` does not import the CSS for you\n\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport SlideModal from './component/SlideModal'\nimport HelpModal from './component/HelpModal'\nimport { MarkdownWrapper } from './component/MarkdownWrapper'\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\n\nimport {\n  Checkbox,\n  FormControlLabel,\n  Typography,\n  Drawer,\n  AppBar,\n  Toolbar,\n  CssBaseline,\n  IconButton,\n} from '@material-ui/core/';\n\nimport Editor from \"@monaco-editor/react\";\n\nimport IOSSwitch from './component/Switch'\n\nconst drawerWidth = \"50%\";\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(${100 - parseFloat(drawerWidth)}%)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerFull: {\n    width: '100%',\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerPaperFull: {\n    width: '100%',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    // minHeight:\"100vh\",\n    // height:\"100%\",\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: 0,\n    overflow: 'hidden'\n  },\n  contentShift: {\n    minHeight:\"100vh\",\n    height:\"100%\",\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n    overflow: 'hidden'\n  },\n});\n\nconst localValue = localStorage.getItem(\"value\")\nconst localSettings = localStorage.getItem(\"settings\")\nconst localSettingsObj = localSettings === null ? null : JSON.parse(localStorage.getItem(\"settings\"))\n\n\nconst initialValue = `# Markdown Slides Demo\n\nMarkdown Slides buit using react making use of \\`material-ui\\`, \\`react-markdown\\` and \\`Monaco\\`.\n\nThis demo is adapted from the \\`react-markdown\\` demo.\n\n👈 As you type inside the editor, 👉 the changes are rendered live.\n\n## Overview\n\n* Follows [CommonMark](https://commonmark.org)\n* Default (but optionally) follows [GitHub Flavored Markdown](https://github.github.com/gfm/)\n* Custom \\`@newslide\\` command\n\n## Slides\n\nYou can seperate the markdown document into slides by breaking the content using a \\`@newslide\\`. Make sure to place this keyword on a separate line to prevent the parser from skipping letters. \n\nA \\`@newslide\\` is used below to separate the pages. \n\nYou can enter Presentation Mode by clicking the Green Present button in the navbar. Use the **arrowkeys** to navigate the slides.\n\n@newslide\n\n# Plugins.\n\nHere is an example of a plugin ([\\`remark-toc\\`](https://github.com/remarkjs/remark-toc)) in action. Notice how the table of contents only finds the up to **Syntax highlighting**. This is because each slide is individually rendered. However, clicking on the contents will scroll the preview window.\n\n\n## Table of contents\n\n## Dummy Heading\n\n## Syntax highlighting\n\nHere is an example of a plugin to highlight code:\n[\\`rehype-highlight\\`](https://github.com/rehypejs/rehype-highlight).\n\n\\`\\`\\`js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Markdown from 'react-markdown'\nimport rehypeHighlight from 'rehype-highlight'\n\nReactDOM.render(\n  <Markdown rehypePlugins={[rehypeHighlight]}>{'# Your markdown here'}</Markdown>,\n  document.querySelector('#content')\n)\n\\`\\`\\`\n\n@newslide\n\n# Formatting\n\n## GitHub flavored markdown (GFM)\n\nFor GFM, we use [\\`remark-gfm\\`](https://github.com/remarkjs/react-markdown#use).\nIt adds support for GitHub-specific extensions to the language:\ntables, strikethrough, tasklists, and literal URLs.\n\nThese features **enabled** by default but can be disabled (Not that you ever should).\n\n👆 Use the checkbox to toggle the plugin.\n\n| Feature    | Support              |\n| ---------: | :------------------- |\n| CommonMark | 100%                 |\n| GFM        | 100% w/ \\`remark-gfm\\` |\n\n~~strikethrough~~\n\n* [ ] task list\n* [x] checked item\n\nhttps://example.com\n\n@newslide\n\n# Formatting 2\n\n## HTML in markdown\n\n⚠️ HTML ([\\`rehype-raw\\`](https://github.com/rehypejs/rehype-raw)) unlike GFM can break your markdown code, thats why it is disabled by default.\nYou should probably combine it with [\\`rehype-sanitize\\`](https://github.com/rehypejs/rehype-sanitize).\n\n<blockquote>\n  👆 Use the toggle above to add the plugin.\n</blockquote>\n\n## Latex (Katex)\n\nAnother usesful feature that many markdown renderer will have is Latex Support. This is **disabled** by default by can be enabled through the checkbox similar to GFM and HTML.\n\n**You will needs to add newlines if the katex is not being rendered.**\n\nHeres 2 ways of center math formulas:\n<center>\n  \n$ f(a,b,c) = (a^2+b^2+c^2)^3 $\n  \n$ f(a,b,c) = (a^2+b^2+c^2)^3 $\n\n</center>\n\nCreating any html block with \\`class=\"math math-inline\"\\`\n<div class=\"math math-display\">\n  L = \\\\frac{1}{2} \\\\rho v^2 S C_L\n</div>\n\nHeres the average power formula\n$ \\\\lim_{T \\\\to \\\\infty}\\\\frac{1}{2T} \\\\int_{-T}^{T} |u(t)|^{2} dt $ \nas an inline formula.\n\n## More info?\nYou can access the repo on\n[GitHub](https://github.com/mxchen2001/markdown-render)!\n***\n`\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.onControlsChange = this.onControlsChange.bind(this)\n    this.onSourceChange = this.onSourceChange.bind(this)\n    this.toggleTheme = this.toggleTheme.bind(this)\n    this.onDownload = this.onDownload.bind(this)\n\n    let newRemarkPlugins = [remarkSlug, remarkToc]\n    let newRehypePlugins = [rehypeHighlight]\n\n    const temp_gfm = localSettings === null? true : localSettingsObj[\"gfm\"]\n    const temp_raw = localSettings === null? false : localSettingsObj[\"raw\"]\n    const temp_math = localSettings === null? false : localSettingsObj[\"math\"]\n\n    if (temp_gfm) {\n      newRemarkPlugins = newRemarkPlugins.concat(remarkGfm)\n    }\n    if (temp_raw) {\n      newRehypePlugins = newRehypePlugins.concat(rehypeRaw)\n    }\n    if (temp_math) {\n      newRemarkPlugins = newRemarkPlugins.concat(remarkMath)\n      newRehypePlugins = newRehypePlugins.concat(rehypeKatex)\n    }\n\n    this.state = {\n      value: localValue === null ? initialValue : localValue,\n      indices: [-9, initialValue.length - 1],\n      remarkPlugins: newRemarkPlugins,\n      rehypePlugins: newRehypePlugins,\n      gfm: temp_gfm,\n      raw: temp_raw,\n      math: temp_math,\n      dark: localSettings === null? true : localSettingsObj[\"dark\"],\n      open: true,\n      full: false,\n    }\n\n    console.log(localSettings)\n  }\n\n  toggleTheme() {\n    const toggledState = !this.state.dark\n    this.setState({\n      dark: toggledState\n    })\n    localStorage.setItem(\"settings\", JSON.stringify({\"gfm\": this.state.gfm, \"raw\": this.state.raw, \"math\": this.state.math, \"dark\": toggledState}));\n  }\n\n  parseValue() {\n    let newIndices = [], n = 0, startIndex = 0;\n    \n    // start at beginning of input, \"@newslide\" is of length 9\n    newIndices.push(-9)\n\n    while(n >= 0) {\n      n = this.state.value.indexOf(\"@newslide\", startIndex);\n      while(n !== -1 && this.state.value[n - 1] === '`') {\n        n = this.state.value.indexOf(\"@newslide\", startIndex + 1);\n        startIndex =  n + 9\n      }\n\n      newIndices.push((n === -1 ? this.state.value.length - 1 : n))\n      startIndex =  n + 9\n    }\n\n    this.setState({\n      indices: newIndices\n    })\n  }\n\n  // Download\n  onDownload(evt) {\n    const element = document.createElement(\"a\")\n    const file = new Blob([this.state.value],    \n    {type: 'text/plain;charset=utf-8'});\n    element.href = URL.createObjectURL(file);\n    element.download = \"markdown-slides.md\";\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  \n  // Editor Windows Changes\n  onSourceChange(new_val) {\n    this.setState({value: new_val}, )\n    localStorage.setItem(\"value\", new_val);\n    this.parseValue()\n  }\n\n  pluginHelper(temp_gfm, temp_raw, temp_math) {\n    let newRemarkPlugins = [remarkSlug, remarkToc]\n    let newRehypePlugins = [rehypeHighlight]\n\n    if (temp_gfm) {\n      newRemarkPlugins = newRemarkPlugins.concat(remarkGfm)\n    }\n    if (temp_raw) {\n      newRehypePlugins = newRehypePlugins.concat(rehypeRaw)\n    }\n    if (temp_math) {\n      newRemarkPlugins = newRemarkPlugins.concat(remarkMath)\n      newRehypePlugins = newRehypePlugins.concat(rehypeKatex)\n    }\n\n    this.setState({\n      remarkPlugins: newRemarkPlugins,\n      rehypePlugins: newRehypePlugins\n    })\n  }\n\n  // Include Render Options\n  onControlsChange(event) {\n    const name = event.target.name\n    const checked = event.target.checked\n\n    let temp_gfm = this.state.gfm, temp_raw = this.state.raw, temp_math = this.state.math;\n\n    if (name === 'gfm') {\n      this.setState({\n        gfm: checked\n      })\n      temp_gfm = checked;\n    } else if (name === \"raw\"){\n      this.setState({\n        raw: checked\n      })\n      temp_raw = checked;\n    } else if (name === \"math\") {\n      this.setState({\n        math: checked\n      })\n      temp_math = checked;\n    }\n    this.pluginHelper(temp_gfm, temp_raw, temp_math)\n    localStorage.setItem(\"settings\", JSON.stringify({\"gfm\": temp_gfm, \"raw\": temp_raw, \"math\": temp_math, \"dark\": this.state.dark}));\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            style={{ background: '#232932' }}\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: this.state.open,\n            })}\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap className={classes.title}>\n                Markdown Slides\n              </Typography>\n\n              {/* Dark mode toggle */}\n              <IOSSwitch checked={this.state.dark} onClick={this.toggleTheme}/>\n\n              {/* Github Formatted Markdown */}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={this.state.gfm}\n                  style ={{\n                    color: \"#f0ad4e\",\n                  }}\n                  name=\"gfm\"\n                  onChange={this.onControlsChange}\n                  />\n                }\n                label=\"GFM\"\n                />\n\n              {/* Pure HTML Formatted Markdown */}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={this.state.raw}\n                  style ={{\n                    color: \"#5bc0de\",\n                  }}\n                  name=\"raw\"\n                  onChange={this.onControlsChange}\n                  />\n                }\n                label=\"HTML\"\n              />\n\n              {/* Katex Markdown */}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={this.state.math}\n                  style ={{\n                    color: \"#f59e0b\",\n                  }}\n                  name=\"math\"\n                  onChange={this.onControlsChange}\n                  />\n                }\n                label=\"LATEX\"\n              />\n\n              {/* Presentation Modal */}\n              <SlideModal\n                value={this.state.value}\n                indices={this.state.indices}\n                remarkPlugins={this.state.remarkPlugins}\n                rehypePlugins={this.state.rehypePlugins}\n              />\n\n              {/* Download Button */}\n              <IconButton style={{color: \"#5bc0de\"}} onClick={this.onDownload}>\n                <GetAppIcon />\n              </IconButton>\n\n              {/* Reset Button */}\n              <IconButton style={{color: \"#d9534f\"}} onClick={() => {\n                this.setState({value : initialValue})\n                localStorage.setItem(\"value\", initialValue)\n                this.parseValue()\n              }}>\n                <RotateLeftIcon />\n              </IconButton>\n              <HelpModal/>\n\n              {/* View Button */}\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"end\"\n                onClick={() => {\n                  this.setState({\n                    open: true\n                  })\n                }}\n                className={clsx(this.state.open && classes.hide)}\n              >\n                <VisibilityIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <main className={clsx(classes.content, { [classes.contentShift]: this.state.open,})} style={{height:'100vh', overflow: 'hidden', backgroundColor: this.state.dark ? '#1e1e1e': '#ffffff'}}>\n            <div className={classes.drawerHeader} />\n\n            {/* Code Window */}\n            <Editor\n                height=\"100vh\"\n                defaultLanguage=\"markdown\"\n                theme={this.state.dark? 'vs-dark' : 'vs-light'}\n                defaultValue={this.state.value}\n                value={this.state.value}\n                onChange={this.onSourceChange}\n                onMount={() => {this.parseValue()}}\n            />\n          </main>\n\n          <Drawer\n            className={\n              clsx(classes.drawer, {\n                [classes.drawerFull]: this.state.full,\n              })\n            }\n            variant=\"persistent\"\n            anchor=\"right\"\n            open={this.state.open}\n            classes={{\n              paper: clsx(classes.drawerPaper, {\n                [classes.drawerPaperFull]: this.state.full,\n              }),\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={() => {\n                  this.setState({\n                    open: false,\n                    full: false\n                  })\n                }}>\n                <VisibilityOffIcon />\n              </IconButton>\n            </div>\n            <div style={{padding: '20px'}}>\n\n              {/* Render Window */}\n              <MarkdownWrapper \n                value={this.state.value}\n                indices={this.state.indices}\n                remarkPlugins={this.state.remarkPlugins}\n                rehypePlugins={this.state.rehypePlugins}\n              />\n            </div>\n          </Drawer>\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('main'))"],"sourceRoot":""}